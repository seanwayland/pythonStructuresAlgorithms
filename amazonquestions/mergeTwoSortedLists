# https://leetcode.com/problems/merge-two-sorted-lists/submissions/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

        
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        if (l1 and not l2):
                return l1
        if (l2 and not l1):
                return l2
        while (l1 and l2):

            

            import queue
            Q = queue.Queue()
            p1 = l1
            p2 = l2 
            while(p1 or p2):
                if(not p1):
                    Q.put(p2.val)
                    p2 = p2.next
                if(not p2):
                    Q.put(p1.val)
                    p1 = p2.next    
                    
                
                if p1 and p2:
                    if p1.val<p2.val:
                        Q.put(p1.val)
                        Q.put(p2.val)
                        p1 = p1.next
                        p2 = p2.next
                    if p2.val<p1.val:
                        Q.put(p2.val)
                        Q.put(p1.val)
                        p1 = p1.next
                        p2 = p2.next

            print(list(Q.queue))


            temp = l1
            head = temp
            while(Q.empty() is False):

                n = ListNode(Q.get())
                temp.next = n
                temp = temp.next

            head = head.next
            return head
